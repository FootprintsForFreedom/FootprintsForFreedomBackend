# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
# Start database: docker-compose up db
# Run migrations: docker-compose run migrate
#       Stop all: docker-compose down (add -v to wipe db)
#
version: '3.7'

volumes:
  db_data:
  caddy_data:
  caddy_config:
  
services:
  app:
    image: digital-traces-backend:1.0-test
    build:
      context: .
    env_file: .env.production
    depends_on:
      - db
      - queues
      - redis
    volumes:
      - "./Public:/app/Public"
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
  queues: 
    image: digital-traces-backend:1.0-test
    build:
      context: .
    env_file: .env.production
    depends_on:
      - db
      - redis
    command: ["queues", "--scheduled"]
  migrate:
    image: digital-traces-backend:1.0-test
    build:
      context: .
    env_file: .env.production
    depends_on:
      - db
      - redis
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
  revert:
    image: digital-traces-backend:1.0-test
    build:
      context: .
    env_file: .env.production
    depends_on:
      - db
      - redis
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0
  db:
    image: postgres:14-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    env_file: .env.production
  redis:
    image: redis:7.0.2
  caddy:
    image: caddy:2.5.1
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./Public:/app/Public"
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
